
Servo_Motor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  000001f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001a4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001f8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000228  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  00000268  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000d2c  00000000  00000000  00000290  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000c0a  00000000  00000000  00000fbc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000368  00000000  00000000  00001bc6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00001f30  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000058f  00000000  00000000  00001f64  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000008c  00000000  00000000  000024f3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  0000257f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	79 c0       	rjmp	.+242    	; 0xf8 <__bad_interrupt>
   6:	00 00       	nop
   8:	77 c0       	rjmp	.+238    	; 0xf8 <__bad_interrupt>
   a:	00 00       	nop
   c:	75 c0       	rjmp	.+234    	; 0xf8 <__bad_interrupt>
   e:	00 00       	nop
  10:	73 c0       	rjmp	.+230    	; 0xf8 <__bad_interrupt>
  12:	00 00       	nop
  14:	71 c0       	rjmp	.+226    	; 0xf8 <__bad_interrupt>
  16:	00 00       	nop
  18:	6f c0       	rjmp	.+222    	; 0xf8 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	6d c0       	rjmp	.+218    	; 0xf8 <__bad_interrupt>
  1e:	00 00       	nop
  20:	6b c0       	rjmp	.+214    	; 0xf8 <__bad_interrupt>
  22:	00 00       	nop
  24:	69 c0       	rjmp	.+210    	; 0xf8 <__bad_interrupt>
  26:	00 00       	nop
  28:	67 c0       	rjmp	.+206    	; 0xf8 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	65 c0       	rjmp	.+202    	; 0xf8 <__bad_interrupt>
  2e:	00 00       	nop
  30:	63 c0       	rjmp	.+198    	; 0xf8 <__bad_interrupt>
  32:	00 00       	nop
  34:	61 c0       	rjmp	.+194    	; 0xf8 <__bad_interrupt>
  36:	00 00       	nop
  38:	5f c0       	rjmp	.+190    	; 0xf8 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	5d c0       	rjmp	.+186    	; 0xf8 <__bad_interrupt>
  3e:	00 00       	nop
  40:	5b c0       	rjmp	.+182    	; 0xf8 <__bad_interrupt>
  42:	00 00       	nop
  44:	59 c0       	rjmp	.+178    	; 0xf8 <__bad_interrupt>
  46:	00 00       	nop
  48:	57 c0       	rjmp	.+174    	; 0xf8 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	55 c0       	rjmp	.+170    	; 0xf8 <__bad_interrupt>
  4e:	00 00       	nop
  50:	53 c0       	rjmp	.+166    	; 0xf8 <__bad_interrupt>
  52:	00 00       	nop
  54:	51 c0       	rjmp	.+162    	; 0xf8 <__bad_interrupt>
  56:	00 00       	nop
  58:	4f c0       	rjmp	.+158    	; 0xf8 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	4d c0       	rjmp	.+154    	; 0xf8 <__bad_interrupt>
  5e:	00 00       	nop
  60:	4b c0       	rjmp	.+150    	; 0xf8 <__bad_interrupt>
  62:	00 00       	nop
  64:	49 c0       	rjmp	.+146    	; 0xf8 <__bad_interrupt>
  66:	00 00       	nop
  68:	47 c0       	rjmp	.+142    	; 0xf8 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	45 c0       	rjmp	.+138    	; 0xf8 <__bad_interrupt>
  6e:	00 00       	nop
  70:	43 c0       	rjmp	.+134    	; 0xf8 <__bad_interrupt>
  72:	00 00       	nop
  74:	41 c0       	rjmp	.+130    	; 0xf8 <__bad_interrupt>
  76:	00 00       	nop
  78:	3f c0       	rjmp	.+126    	; 0xf8 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	3d c0       	rjmp	.+122    	; 0xf8 <__bad_interrupt>
  7e:	00 00       	nop
  80:	3b c0       	rjmp	.+118    	; 0xf8 <__bad_interrupt>
  82:	00 00       	nop
  84:	39 c0       	rjmp	.+114    	; 0xf8 <__bad_interrupt>
  86:	00 00       	nop
  88:	37 c0       	rjmp	.+110    	; 0xf8 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	35 c0       	rjmp	.+106    	; 0xf8 <__bad_interrupt>
  8e:	00 00       	nop
  90:	33 c0       	rjmp	.+102    	; 0xf8 <__bad_interrupt>
  92:	00 00       	nop
  94:	31 c0       	rjmp	.+98     	; 0xf8 <__bad_interrupt>
  96:	00 00       	nop
  98:	2f c0       	rjmp	.+94     	; 0xf8 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	2d c0       	rjmp	.+90     	; 0xf8 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	2b c0       	rjmp	.+86     	; 0xf8 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	29 c0       	rjmp	.+82     	; 0xf8 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	27 c0       	rjmp	.+78     	; 0xf8 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	25 c0       	rjmp	.+74     	; 0xf8 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	23 c0       	rjmp	.+70     	; 0xf8 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	21 c0       	rjmp	.+66     	; 0xf8 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	1f c0       	rjmp	.+62     	; 0xf8 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	1d c0       	rjmp	.+58     	; 0xf8 <__bad_interrupt>
  be:	00 00       	nop
  c0:	1b c0       	rjmp	.+54     	; 0xf8 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	19 c0       	rjmp	.+50     	; 0xf8 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	17 c0       	rjmp	.+46     	; 0xf8 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	15 c0       	rjmp	.+42     	; 0xf8 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	13 c0       	rjmp	.+38     	; 0xf8 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	11 c0       	rjmp	.+34     	; 0xf8 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	0f c0       	rjmp	.+30     	; 0xf8 <__bad_interrupt>
  da:	00 00       	nop
  dc:	0d c0       	rjmp	.+26     	; 0xf8 <__bad_interrupt>
  de:	00 00       	nop
  e0:	0b c0       	rjmp	.+22     	; 0xf8 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60
  f4:	39 d0       	rcall	.+114    	; 0x168 <main>
  f6:	54 c0       	rjmp	.+168    	; 0x1a0 <_exit>

000000f8 <__bad_interrupt>:
  f8:	83 cf       	rjmp	.-250    	; 0x0 <__vectors>

000000fa <Drej_Motor>:

#define F_CPU 16E6

void Drej_Motor()
{
	for(OCR1A=500;OCR1A <= 1500;OCR1A++)
  fa:	e8 e8       	ldi	r30, 0x88	; 136
  fc:	f0 e0       	ldi	r31, 0x00	; 0
  fe:	84 ef       	ldi	r24, 0xF4	; 244
 100:	91 e0       	ldi	r25, 0x01	; 1
 102:	91 83       	std	Z+1, r25	; 0x01
 104:	80 83       	st	Z, r24
 106:	80 81       	ld	r24, Z
 108:	91 81       	ldd	r25, Z+1	; 0x01
 10a:	8d 3d       	cpi	r24, 0xDD	; 221
 10c:	95 40       	sbci	r25, 0x05	; 5
 10e:	80 f4       	brcc	.+32     	; 0x130 <Drej_Motor+0x36>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 110:	85 ea       	ldi	r24, 0xA5	; 165
 112:	9e e0       	ldi	r25, 0x0E	; 14
 114:	01 97       	sbiw	r24, 0x01	; 1
 116:	f1 f7       	brne	.-4      	; 0x114 <Drej_Motor+0x1a>
 118:	00 c0       	rjmp	.+0      	; 0x11a <Drej_Motor+0x20>
 11a:	00 00       	nop
 11c:	80 81       	ld	r24, Z
 11e:	91 81       	ldd	r25, Z+1	; 0x01
 120:	01 96       	adiw	r24, 0x01	; 1
 122:	91 83       	std	Z+1, r25	; 0x01
 124:	80 83       	st	Z, r24
 126:	80 81       	ld	r24, Z
 128:	91 81       	ldd	r25, Z+1	; 0x01
 12a:	8d 3d       	cpi	r24, 0xDD	; 221
 12c:	95 40       	sbci	r25, 0x05	; 5
 12e:	80 f3       	brcs	.-32     	; 0x110 <Drej_Motor+0x16>
	{
		_delay_ms(15);
	}
	
	for(OCR1A=500;OCR1A >= 500;OCR1A--)
 130:	e8 e8       	ldi	r30, 0x88	; 136
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	84 ef       	ldi	r24, 0xF4	; 244
 136:	91 e0       	ldi	r25, 0x01	; 1
 138:	91 83       	std	Z+1, r25	; 0x01
 13a:	80 83       	st	Z, r24
 13c:	80 81       	ld	r24, Z
 13e:	91 81       	ldd	r25, Z+1	; 0x01
 140:	84 3f       	cpi	r24, 0xF4	; 244
 142:	91 40       	sbci	r25, 0x01	; 1
 144:	80 f0       	brcs	.+32     	; 0x166 <Drej_Motor+0x6c>
 146:	81 ee       	ldi	r24, 0xE1	; 225
 148:	94 e0       	ldi	r25, 0x04	; 4
 14a:	01 97       	sbiw	r24, 0x01	; 1
 14c:	f1 f7       	brne	.-4      	; 0x14a <Drej_Motor+0x50>
 14e:	00 c0       	rjmp	.+0      	; 0x150 <Drej_Motor+0x56>
 150:	00 00       	nop
 152:	80 81       	ld	r24, Z
 154:	91 81       	ldd	r25, Z+1	; 0x01
 156:	01 97       	sbiw	r24, 0x01	; 1
 158:	91 83       	std	Z+1, r25	; 0x01
 15a:	80 83       	st	Z, r24
 15c:	80 81       	ld	r24, Z
 15e:	91 81       	ldd	r25, Z+1	; 0x01
 160:	84 3f       	cpi	r24, 0xF4	; 244
 162:	91 40       	sbci	r25, 0x01	; 1
 164:	80 f7       	brcc	.-32     	; 0x146 <Drej_Motor+0x4c>
 166:	08 95       	ret

00000168 <main>:
	}
}

int main(void)
{
	DDRB |= (1<<DDB5);
 168:	25 9a       	sbi	0x04, 5	; 4
	
	TCCR1B |= (1<<WGM13);
 16a:	e1 e8       	ldi	r30, 0x81	; 129
 16c:	f0 e0       	ldi	r31, 0x00	; 0
 16e:	80 81       	ld	r24, Z
 170:	80 61       	ori	r24, 0x10	; 16
 172:	80 83       	st	Z, r24
	
	TCCR1A |= (1<<COM1A1) | (1<<WGM11);
 174:	a0 e8       	ldi	r26, 0x80	; 128
 176:	b0 e0       	ldi	r27, 0x00	; 0
 178:	8c 91       	ld	r24, X
 17a:	82 68       	ori	r24, 0x82	; 130
 17c:	8c 93       	st	X, r24
	
	ICR1 = 20000;
 17e:	80 e2       	ldi	r24, 0x20	; 32
 180:	9e e4       	ldi	r25, 0x4E	; 78
 182:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x700087>
 186:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x700086>
	
	OCR1A = 1000;
 18a:	88 ee       	ldi	r24, 0xE8	; 232
 18c:	93 e0       	ldi	r25, 0x03	; 3
 18e:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
 192:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
	
	TCCR1B |= ((1<<CS11));
 196:	80 81       	ld	r24, Z
 198:	82 60       	ori	r24, 0x02	; 2
 19a:	80 83       	st	Z, r24
		
    while (1) 
    {
		Drej_Motor();
 19c:	ae df       	rcall	.-164    	; 0xfa <Drej_Motor>
 19e:	fe cf       	rjmp	.-4      	; 0x19c <main+0x34>

000001a0 <_exit>:
 1a0:	f8 94       	cli

000001a2 <__stop_program>:
 1a2:	ff cf       	rjmp	.-2      	; 0x1a2 <__stop_program>
